package edu.kit.ipd.sdq.kamp4iec.core;

import Modifikationmarks.AbstractKAMP4IECModificationRepository;
import edu.kit.ipd.sdq.kamp.architecture.AbstractArchitectureVersion;


public class ArchitectureVersion extends AbstractArchitectureVersion<AbstractKAMP4IECModificationRepository<?>> {
	
	public static class ArchitectureVersionParams{
		public String name;
		public AbstractKAMP4IECModificationRepository<?> modificationMarkRepository;
	}
	
	public ArchitectureVersion(ArchitectureVersionParams params) {
		super(params.name, params.modificationMarkRepository);
		// Some of the files describing the architecture might not exist; prevent NullPointer
		// in propagation algorithm by setting newly created objects (whose EReferences are
		// instantiated with empty collections, so the algorithm can handle them)
		
		if (params.fieldOfActivityRepository == null)
			params.fieldOfActivityRepository = FieldofactivityannotationsFactory.eINSTANCE.
					createFieldOfActivityAnnotationRepository();

		_fieldOfActivityRepository = params.fieldOfActivityRepository;
		_xppuPlant = params.xPPUPlant;
		
		if(params.deploymentContextRepository == null)
			params.deploymentContextRepository = DeploymentContextFactory.eINSTANCE.createDeploymentContextRepository();
		_deploymentContextRepository = params.deploymentContextRepository;
	}

	public FieldOfActivityAnnotationRepository getFieldOfActivityRepository() {
		return _fieldOfActivityRepository;
	}

	public void setFieldOfActivityRepository(
			FieldOfActivityAnnotationRepository fieldOfActivityRepository) {
		this._fieldOfActivityRepository = fieldOfActivityRepository;
	}

	public Plant getXPPUPlant(){
		return _xppuPlant;
	}

	public void setXPPUPlant(Plant plant) {
		this._xppuPlant = plant;
	}

	public DeploymentContextRepository getDeploymentContextRepository(){
		return _deploymentContextRepository;
	}
}
